// PD_SH_PN.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include "money.h"
int main()
{
	setlocale(LC_ALL, "Rus");
	long x1, x2, y1, y2;
	double z1, z2;
	int N;
	std::cout << "Введите 2 суммы денег, мспользуя следующие правила: " << std::endl;
	std::cout << "1. Каждая сумма задаётся 3 числами: первое - фунты, второе - шиллинги, третье - пенсы; " << std::endl;
	std::cout << "2. Максимальная (по модулю) хранимая величина - 1 млрд. фунтов; " << std::endl;
	std::cout << "3. Количество шиллингов меньше 20;" << std::endl;
	std::cout << "4. Количество пенсов меньше 12;" << std::endl;
	std::cout << "5. Самая маленькая денежная единица - пол пенса;" << std::endl;
	std::cout << "6. При вводе отрицательной суммы денег, минус ставится перед первой значащей цифрой,т.е. запись 5 -4 1 - неверная, а 0 -4 1 - верная." << std::endl;
	std::cout << "Введите первую сумму денег: " << std::endl;
	std::cin >> x1 >> y1 >> z1;
	std::cout << "Введите вторую сумму денег: " << std::endl;
	std::cin >> x2 >> y2 >> z2;
	try
	{
		money m1(x1, y1, z1);
		money m2(x2, y2, z2);
		money msum;
		money mraz;
		std::cout << "Выберите нужную вам операцию: " << std::endl;
		std::cout << "1. Сравнение" << std::endl;
		std::cout << "2. Унарный минус" << std::endl;
		std::cout << "3. Сложение" << std::endl;
		std::cout << "4. Вычитание" << std::endl;
		std::cout << "5. Операция '+='" << std::endl;
		std::cout << "6. Операция '-='" << std::endl;
		std::cin >> N;
		switch (N)
		{
		case 1:
			std::cout << "Результат операции 'сравнение':" << std::endl;
			if (m1 == m2)
			{
				std::cout << "Количество денег одинаковое: " << m1 << " = " << m2 << std::endl;
			}
			if ((m1 != m2) && (m1 > m2))
			{
				std::cout << "Количество денег разное: " << m1 << " больше, чем " << m2 << std::endl;
			}
			if ((m1 != m2) && (m1 < m2))
			{
				std::cout << "Количество денег разное: " << m1 << " меньше, чем " << m2 << std::endl;
			}
			return 0;
		case 2:
			std::cout << "Первая сумма денег после операции 'унарный минус':" << std::endl;
			std::cout << -m1 << std::endl;
			std::cout << "Вторая сумма денег после операции 'унарный минус':" << std::endl;
			std::cout << -m2 << std::endl;
			return 0;
		case 3:
			msum = m1 + m2;
			std::cout << "Результат операции 'сложение':" << std::endl;
			std::cout << msum << std::endl;
			return 0;
		case 4:
			mraz = m1 - m2;
			std::cout << "Результат операции 'вычитание':" << std::endl;
			std::cout << mraz << std::endl;
			return 0;
		case 5:
			m1 += m2;
			std::cout << "Результат операции '+=':" << std::endl;
			std::cout << m1 << std::endl;
			return 0;
		case 6:
			m1 -= m2;
			std::cout << "Результат операции '-=':" << std::endl;
			std::cout << m1 << std::endl;
			return 0;
		}
	}
	catch (std::exception e)
	{
		std::cout << e.what();
		return 0;
	}

	return 0;
}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
